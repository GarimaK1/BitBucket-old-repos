/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.EnterpriseWorkQueues;

import Business.DeviceCategory.Device;

import Business.Enterprise.Enterprise;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import UserInterface.AuthorizationWorkArea.AuthorizationWorkAreaJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author sakshigoyal
 */
public class EmailCommunicationJPanel extends javax.swing.JPanel {

    private JPanel userContainer;
    private UserAccount user;

    private Enterprise enterprice;
    //private String[] message= {"Approved", "Disapproved"};

    private String email;
    //private String deviceId;
    private int[] num = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
    public int quantity;

    private WorkRequest req;

    public EmailCommunicationJPanel(JPanel userContainer, UserAccount user, String email, WorkRequest req) {

        initComponents();
        this.userContainer = userContainer;
        this.user = user;
        this.email = email;

        emailId.setText(email);
        System.out.println("Outside Email Loop");

        System.out.println("Inside Email Loop");

        emailId.setText(email);
        this.req = req;

        populate();
        
    }

    private void populate() {
        devQuantityComboBox.removeAllItems();
        for (int num1 : num) {
            devQuantityComboBox.addItem(num1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        sendEmailButton = new javax.swing.JButton();
        emailId = new javax.swing.JTextField();
        devQuantityComboBox = new javax.swing.JComboBox();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(201, 218, 229));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Enterprise Send Mail");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 23, -1, -1));

        jLabel2.setText("Email Address:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 78, -1, -1));

        jLabel3.setText("Device Quantity:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 118, -1, -1));

        sendEmailButton.setText("Place Order >");
        sendEmailButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendEmailButtonActionPerformed(evt);
            }
        });
        add(sendEmailButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 163, -1, -1));

        emailId.setBackground(java.awt.Color.lightGray);
        emailId.setEnabled(false);
        add(emailId, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 72, 150, -1));

        devQuantityComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(devQuantityComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 118, 150, -1));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 261, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void sendEmailButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendEmailButtonActionPerformed
        try {
            // TODO add your handling code here:
            //  try {
            Properties props = System.getProperties();
            System.out.println("1");
            // -- Attaching to default Session, or we could start a new one --
            props.put("mail.smtp.port", 465);
            props.put("mail.smtp.user", user.getEmailId());
            System.out.println("mail.smtp.user" + user.getEmailId());
            props.put("mail.transport.protocol", "smtp");
            System.out.println("2");
            //props.put("mail.smtp.starttls.enable","true" );
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.debug", "true");
            props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
            props.put("mail.smtp.socketFactory.port", 465);
            props.put("mail.smtp.socketFactory.fallback", "false");
            SMTPAuthenticator auth = new SMTPAuthenticator();
            Session session = Session.getInstance(props, auth);
            session.setDebug(true);
            // -- Create a new message --
            Message msg = new MimeMessage(session);
            // -- Set the FROM and TO fields --
            msg.setFrom(new InternetAddress(user.getEmailId()));
            msg.addRecipient(Message.RecipientType.TO, new InternetAddress(email.trim()));
            msg.setSubject("Approval Status");
            System.out.println("3");
            quantity = (Integer) devQuantityComboBox.getSelectedItem();

            req.getDevice().setOrderQuantity(quantity);
            System.out.println("=============");
            System.out.println("Ordered quantity:" + req.getDevice().getOrderQuantity());
            System.out.println("=============");

            msg.setText("We would like to place order for" + " " + quantity + " devices with device ID " + req.getDevice().getDeviceId());

            req.getDevice().setOrderQuantity(quantity);

            System.out.println("=============");
            System.out.println("current quantity: " + req.getDevice().getOrderQuantity());
            int currentTotal = req.getDevice().getTotalOrderQuantity() + quantity;
            req.getDevice().setTotalOrderQuantity(currentTotal);
            System.out.println("Total order quantity: " + req.getDevice().getTotalOrderQuantity());
            System.out.println("=============");
            System.out.println("Ordered quantity:" + req.getDevice().getOrderQuantity());
            System.out.println("=============");
            //updateTotalQuantityForADevice(device);
            System.out.println("4");

            msg.setText("We would like to place order for" + " " + quantity + " devices with device ID " + req.getDevice().getDeviceId());

            // -- Set some other header information --
            msg.setHeader("MyMail", "Mr. XYZ");

            msg.setSentDate(new Date());

            System.out.println("5");
            // -- Send the message --
            Transport transport = session.getTransport("smtp");
            transport.connect("smtp.gmail.com", Integer.valueOf(465), user.getEmailId(), user.getPassword());
            transport.send(msg);
            JOptionPane.showMessageDialog(null, "Message Sent to:" + email);
            ChangeStatusforSalesPerson(req);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Invalid Email Address");

        }

    }//GEN-LAST:event_sendEmailButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userContainer.remove(this);
        Component[] componentArray = userContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AuthorizationWorkAreaJPanel authP = (AuthorizationWorkAreaJPanel) component;
        System.out.println("device selected");
        authP.populateTable();
        System.out.println("device selected1");
        CardLayout layout = (CardLayout) userContainer.getLayout();
        layout.previous(userContainer);
    }//GEN-LAST:event_backJButtonActionPerformed
    private class SMTPAuthenticator extends javax.mail.Authenticator {

        @Override
        public PasswordAuthentication getPasswordAuthentication() {
            // specify your password here
            System.out.println(user.getEmailId() + " pwd " + user.getPassword());
            return new PasswordAuthentication(user.getEmailId(), user.getPassword());
        }

    }

    public void ChangeStatusforSalesPerson(WorkRequest req) {
        System.out.println("authstatusnow" + req.getStatus());
        WorkRequest ParentReq = req.getParentRequestObject();
        if (req.getStatus().equals("Approved")) {
            ParentReq.setStatus("Order Placed");
            ChangeStatusforManufacturer(ParentReq);
            System.out.println("authstatus after manu/sale update" + req.getStatus());
            req.setStatus("Order Placed");
            System.out.println("authstatus final update" + req.getStatus());
        } else if (req.getStatus().equals("Order Placed")) {
            JOptionPane.showMessageDialog(null, "Order already placed !");
        } else {
            ParentReq.setStatus(req.getStatus());
        }
    }

    public void ChangeStatusforManufacturer(WorkRequest req) {

        WorkRequest ParentReq = req.getParentRequestObject();
        if (ParentReq != null) {
            ParentReq.setStatus(req.getStatus());
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox devQuantityComboBox;
    private javax.swing.JTextField emailId;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton sendEmailButton;
    // End of variables declaration//GEN-END:variables
}
