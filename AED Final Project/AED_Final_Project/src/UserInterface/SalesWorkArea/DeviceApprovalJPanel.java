/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.SalesWorkArea;

import Business.DeviceCategory.Device;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.AuthorizationOrganization;
import Business.Organization.Organization;
import Business.Organization.SalesOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AuthorizationLevelWorkRequest;
import Business.WorkQueue.SalesLevelWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author divinity
 */
public class DeviceApprovalJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DeviceApprovalJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Enterprise enterprise;
    private EcoSystem business;
    private Organization salesOrg;
    

    public DeviceApprovalJPanel(JPanel userProcessContainer, UserAccount account,SalesOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.business = business;
        this.salesOrg = organization;
        valueLabel.setText(enterprise.getName());
        System.out.println("in test lab :" + business.getNetworkList());

        populatecombobox();
        populatecomboboxEnterprise();

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populatecombobox() {

        comboDevice.removeAllItems();
        for (Device dev : enterprise.getDeviceDirectory().getDeviceList()) {
            comboDevice.addItem(dev);
        }
    }

    public void populatecomboboxEnterprise() {

        comboEnterprise.removeAllItems();
        for (Network net : business.getNetworkList()) {
            System.out.println("in network " + business.getNetworkList()); 
            for (Enterprise enter : net.getEnterpriseDirectory().getEnterpriseList()) {
                 System.out.println("in populate  :" + enter.getOrganizationDirectory().getOrganizationList());
                 if (enter.getEnterpriseType().equals(Enterprise.EnterpriseType.HealthcareProvider)){
                     
                             comboEnterprise.addItem(enter);
                         }
                     
                     
                 
                
            }
        }
    }

        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestTestJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        valueLabel = new javax.swing.JLabel();
        enterpriseLabel = new javax.swing.JLabel();
        comboDevice = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboEnterprise = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(201, 218, 229));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        requestTestJButton.setText("Send Approval Request");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 149, -1, -1));

        backJButton.setText("<<Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 261, -1, -1));

        valueLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 28, 174, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        enterpriseLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        enterpriseLabel.setText("Enterprise :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 28, 108, -1));

        comboDevice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(comboDevice, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 71, 174, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Select Device: ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 71, 108, -1));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Select Enterprise:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 99, -1, -1));

        comboEnterprise.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEnterpriseActionPerformed(evt);
            }
        });
        add(comboEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 110, 174, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        
        System.out.println("inside button");
        Device dev = (Device) comboDevice.getSelectedItem();
        Enterprise enter = (Enterprise) comboEnterprise.getSelectedItem();
        
        if (dev == null || enter == null){
            JOptionPane.showMessageDialog(null, "Please select correct options.");
            return;
        }
        
        System.out.println("device selected" + dev);
        
        SalesLevelWorkRequest workRequestObjForSales = new SalesLevelWorkRequest();

        workRequestObjForSales.setDevice(dev);
        workRequestObjForSales.setEnterprise(enter);
        workRequestObjForSales.setSender(account);
        workRequestObjForSales.setStatus("Sent to Healthcare");
        business.getAllWorkList().add(workRequestObjForSales);
        System.out.println("new sales object created "+workRequestObjForSales.getEnterprise());
        
        
        AuthorizationLevelWorkRequest requestObjForAuthenticator = new AuthorizationLevelWorkRequest();
        
        requestObjForAuthenticator.setDevice(dev);
        requestObjForAuthenticator.setEnterprise(enter);
        requestObjForAuthenticator.setSender(account);
        requestObjForAuthenticator.setStatus("To Be Processed");
        requestObjForAuthenticator.setParentId(workRequestObjForSales.getRequestId());
        requestObjForAuthenticator.setParentRequestObject(workRequestObjForSales);
        
        workRequestObjForSales.setChildRequestObject(requestObjForAuthenticator);
        business.getAllWorkList().add(requestObjForAuthenticator);

        Organization org = null;
        Enterprise enterprise1 = null;

        for (Network net : business.getNetworkList()) {
            for (Enterprise ent : net.getEnterpriseDirectory().getEnterpriseList()) {
                if (ent.getName().equals(enter.getName())) {
                    System.out.println("enterprise matched with Jpana  "+ ent.getName() );
                    for (Organization org1 : ent.getOrganizationDirectory().getOrganizationList()) {
                        if (org1 instanceof AuthorizationOrganization) {
                            org = org1;
                            enterprise1 = ent;
                            break;
                        }
                    }
                    if (org != null && enterprise1 != null) {
                        org.getWorkQueue().getWorkRequestList().add(requestObjForAuthenticator);
                        account.getWorkQueue().getWorkRequestList().add(workRequestObjForSales);
                        
                        salesOrg.getWorkQueue().getWorkRequestList().add(workRequestObjForSales);
                        
                         System.out.println("new sales object added "+ salesOrg);
                        
                        System.out.println("org selected 123" + org);
                        System.out.println(dev);
                        JOptionPane.showMessageDialog(null, "Request sent to Healthcare for approval.");
                    }
                    else
                        JOptionPane.showMessageDialog(null, "No authorization department found for this Healthcare !");
                }
            }

        }
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SalesWorkAreaJPanel dwjp = (SalesWorkAreaJPanel) component;
        System.out.println("device selected");
        dwjp.populateRequestTable();
        System.out.println("device selected1");
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backJButtonActionPerformed

    private void comboEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEnterpriseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboEnterpriseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JComboBox comboDevice;
    private javax.swing.JComboBox comboEnterprise;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
